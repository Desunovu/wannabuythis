# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        poetry-version: ["1.8.3"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Setup local venv (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - name: Define cache for the venv based on the deps lock file
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project deps
      run: poetry install
    - name: Test with pytest
      run: poetry run pytest -v
