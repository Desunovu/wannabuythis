"""Remove roles

Revision ID: c832f3eab344
Revises: 22324226e3bf
Create Date: 2024-07-03 21:19:37.117834

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c832f3eab344"
down_revision: Union[str, None] = "22324226e3bf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles")
    op.drop_table("role_permissions")
    op.drop_table("permissions")
    op.drop_table("user_roles")
    op.add_column("users", sa.Column("is_superuser", sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "is_superuser")
    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"], ["roles.id"], name="user_roles_role_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="user_roles_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id", name="user_roles_pkey"),
    )
    op.create_table(
        "permissions",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('permissions_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="permissions_pkey"),
        sa.UniqueConstraint("name", name="permissions_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "role_permissions",
        sa.Column("role_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
            name="role_permissions_permission_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["roles.id"], name="role_permissions_role_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "role_id", "permission_id", name="role_permissions_pkey"
        ),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="roles_pkey"),
        sa.UniqueConstraint("name", name="roles_name_key"),
    )
    # ### end Alembic commands ###
